# HTTP Boot Infrastructure Configuration Template
# ==============================================
# Copy this file to .env and customize for your environment

# Network Settings
# ================
# Network subnet in CIDR notation (e.g., 192.168.1.0/24, 10.0.0.0/8)
NETWORK_SUBNET=192.168.1.0/24

# DHCP range for client IP assignment (must be within NETWORK_SUBNET)
DHCP_RANGE_START=192.168.1.100
DHCP_RANGE_END=192.168.1.200

# Network infrastructure
GATEWAY_IP=192.168.1.1
DNS_PRIMARY=8.8.8.8
DNS_SECONDARY=8.8.4.4

# IP address of the host running the boot server (must NOT be in DHCP range)
HOST_IP=192.168.1.10

# Boot Server Configuration
# =========================
# HTTP server port for serving boot files (default: 8080, alternative: 80)
HTTP_PORT=8080

# TFTP server port for initial boot files (standard: 69)
TFTP_PORT=6969

# Enable UEFI Secure Boot support (true/false)
ENABLE_SECURE_BOOT=false

# Boot menu timeout in seconds (0 = no timeout, 30 = default)
BOOT_TIMEOUT=30

# Distribution and Architecture
# =============================
# Primary Linux distribution to serve (debian, ubuntu, centos, fedora)
PRIMARY_DISTRO=debian

# Target architecture (amd64, arm64, i386)
ARCHITECTURE=amd64

# Boot method support (bios, uefi, both)
BOOT_METHOD=both

# Additional distributions (comma-separated: "ubuntu,centos,fedora")
ADDITIONAL_DISTROS=""

# Distribution-specific release versions
DEBIAN_RELEASE=stable          # stable, testing, bookworm, bullseye
UBUNTU_RELEASE=noble             # jammy, focal, noble
CENTOS_RELEASE=9-stream          # 9-stream, 8-stream
FEDORA_RELEASE=39                # 39, 38, rawhide

# Container Configuration
# =======================
# Container name for the HTTP boot server
CONTAINER_NAME=httpboot-server

# Container registry (docker.io, quay.io, registry.redhat.io)
CONTAINER_REGISTRY=docker.io

# Data directory for persistent storage (relative or absolute path)
DATA_DIRECTORY=./data

# Container image tag (latest, specific version)
CONTAINER_IMAGE_TAG=latest

# Container restart policy (no, always, unless-stopped, on-failure)
RESTART_POLICY=always

# Security Settings
# =================
# Enable HTTP basic authentication (true/false)
ENABLE_HTTP_AUTH=false

# HTTP authentication credentials (change defaults!)
HTTP_USERNAME=admin
HTTP_PASSWORD=changeme

# Allowed networks for access (comma-separated CIDR: "192.168.1.0/24,10.0.0.0/8")
ALLOWED_NETWORKS="192.168.1.0/24,10.0.0.0/8"

# Enable SSL/TLS encryption (true/false)
ENABLE_SSL=false

# SSL certificate and key paths (required if ENABLE_SSL=true)
SSL_CERT_PATH=""
SSL_KEY_PATH=""

# Service Configuration
# =====================
# Enable DHCP relay functionality (true/false)
ENABLE_DHCP_RELAY=false

# TFTP block size in bytes (512, 1024, 1468)
TFTP_BLOCKSIZE=1024

# HTTP keep-alive timeout in seconds
HTTP_KEEPALIVE=60

# Maximum concurrent downloads allowed
MAX_CONCURRENT_DOWNLOADS=10

# Logging and Monitoring
# ======================
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable HTTP access logging (true/false)
ENABLE_ACCESS_LOG=true

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Backup retention period in days
BACKUP_RETENTION_DAYS=7

# Advanced Configuration
# ======================
# Custom kernel parameters (space-separated)
KERNEL_PARAMETERS=""

# Custom preseed/kickstart URL
PRESEED_URL=""

# NFS server for additional repositories
NFS_SERVER=""
NFS_PATH=""

# Mirror URLs for faster downloads
DEBIAN_MIRROR="http://deb.debian.org/debian"
UBUNTU_MIRROR="http://archive.ubuntu.com/ubuntu"
CENTOS_MIRROR="http://mirror.centos.org/centos"
FEDORA_MIRROR="http://download.fedoraproject.org/pub/fedora/linux"

# Container resource limits
MEMORY_LIMIT=1g
CPU_LIMIT=1.0
DISK_LIMIT=10g

# Network configuration
CONTAINER_NETWORK=host          # host, bridge, custom
CUSTOM_NETWORK_NAME=""
CUSTOM_SUBNET=""

# Firewall configuration
ENABLE_FIREWALL_RULES=true
FIREWALL_BACKEND=iptables       # iptables, firewalld, ufw

# Backup configuration
ENABLE_AUTO_BACKUP=false
BACKUP_SCHEDULE="0 2 * * *"     # Cron format
BACKUP_DESTINATION="/backup"
BACKUP_COMPRESSION=gzip         # gzip, bzip2, xz, none